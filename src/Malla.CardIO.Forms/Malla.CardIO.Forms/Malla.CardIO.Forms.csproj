<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="MSBuild.Sdk.Extras/2.0.54">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;MonoAndroid90;Xamarin.iOS10</TargetFrameworks>
    <Authors>Luis Matos</Authors>
    <Company>Malla Agency</Company>
    <PackageProjectUrl>https://github.com/mallaagency/CardIO.Forms</PackageProjectUrl>
    <RepositoryUrl>https://github.com/mallaagency/CardIO.Forms</RepositoryUrl>
	<PackageLicenseUrl>https://github.com/mallaagency/CardIO.Forms/blob/main/LICENSE</PackageLicenseUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>cardio, android, ios, xamarin, forms, xamarin.forms, xamarin forms, card, credit card, scan, scanner</PackageTags>
    <Copyright>Â© Malla Agency. All rights reserved.</Copyright>
    <Description>Credit card scanning for Xamarin.Forms mobile apps</Description>
	<PackageLicenseExpression>MIT</PackageLicenseExpression>
	<PackageId>Malla.CardIO.Forms</PackageId>
	<PackageReleaseNotes>
		CardIO.Forms is a library for Xamarin.Forms Android and iOS that can scan credit card details in from the device's camera similar to a barcode scanner.  CardIO.Form makes scanning and entering Credit Card information simple.

		## Features

		- **Live Camera Card Scanning**: Quick and simple integration.  Get up and running in 5 minutes.
		- **Optional Manual Entry**: Users can choose to type their credit cards in.  Card.io provides a slick interface for manual card entry.
		- **Secure**: No credit card information is stored or transmitted.
		- **Free**: SDK's are free for both Android and iOS.

		## Learn More
		Learn more about Card.io by visiting http://www.card.io
	</PackageReleaseNotes>
	<PackageIcon>icon.png</PackageIcon>
  </PropertyGroup>

    <PropertyGroup>
	    <AssemblyName>Malla.CardIO</AssemblyName>
	    <RootNamespace>Malla.CardIO</RootNamespace>
	    <Product>$(AssemblyName) ($(TargetFramework))</Product>
	    <NeutralLanguage>en</NeutralLanguage>
		
		<!--Version of C# to use -->
	    <LangVersion>default</LangVersion>
		
		 <!-- Helper to add defines-->
	    <DefineConstants>$(DefineConstants);</DefineConstants>
	    <UseFullSemVerForNuGet>false</UseFullSemVerForNuGet>
		
		 <!--Don't auto add files for me, I will tell you -->
	    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
		
	    <PackOnBuild>true</PackOnBuild>
		<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>

		<!-- Optional: Publish the repository URL in the built .nupkg (in the NuSpec <Repository> element) -->
		<PublishRepositoryUrl>true</PublishRepositoryUrl>

		<!-- Optional: Embed source files that are not tracked by the source control manager in the PDB -->
		<EmbedUntrackedSources>true</EmbedUntrackedSources>

		<!-- Optional: Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
    </PropertyGroup>
	
  <!-- If config is debug create debug symbols -->
  <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- If config is release create a package -->
  <PropertyGroup Condition=" '$(Configuration)'=='Release' ">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DebugType>pdbonly</DebugType>
    <!-- sourcelink: Include PDB in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
	
  <!-- Create the item groups for the different platforms -->
  <ItemGroup>
    <!-- Include a folder for each platform -->
	  <Folder Include="Platforms\iOS\" />
	  <Folder Include="Platforms\Android\" />
	  <Folder Include="Shared\" />
	  
	  <Compile Include="Shared\**\*.shared.cs" />
	  
	  <PackageReference Include="NuGet.CommandLine" Version="6.0.0">
	    <PrivateAssets>all</PrivateAssets>
	    <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
	  </PackageReference>
      <!--<None Include="readme.txt" pack="true" PackagePath="." />-->
      <PackageReference Include="Xamarin.Forms" Version="4.4.0.991265" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('netstandard')) ">
  </ItemGroup>
	
  <ItemGroup Condition=" $(TargetFramework.StartsWith('MonoAndroid')) ">
	<PackageReference Include="Xamarin.CardIO.Android" Version="5.5.1" />
	<Compile Include="Platforms\Android\**\*.android.cs" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.iOS')) ">
	  <PackageReference Include="Xamarin.CardIO.iOS" Version="5.4.1" />
	  <Compile Include="Platforms\iOS\**\*.ios.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\..\assets\icon.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
